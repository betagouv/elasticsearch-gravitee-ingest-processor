buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:7.9.0"
    classpath "com.github.breadmoirai:github-release:2.2.12"
  }
}

repositories {
  mavenLocal()
}

group = 'org.elasticsearch.plugin.ingest'
version = '0.0.1'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.testclusters'
apply plugin: 'elasticsearch.rest-resources'
apply plugin: "com.github.breadmoirai.github-release"

// license of this project
licenseFile = rootProject.file('LICENSE.txt')
// copyright notices
noticeFile = rootProject.file('NOTICE.txt')

esplugin {
  name 'ingest-gdpr'
  description 'Ingest processor to strip out personal information from data given to Gravitee'
  classname 'org.elasticsearch.plugin.ingest.gdpr.IngestGdprPlugin'
  // license of the plugin, may be different than the above license
  licenseFile rootProject.file('LICENSE.txt')
  // copyright notices, may be different than the above notice
  noticeFile rootProject.file('NOTICE.txt')
}

// In this section you declare the dependencies for your production and test code
// Note, the two dependencies are not really needed as the buildscript dependency gets them in already
// they are just here as an example
dependencies {
  compile 'org.elasticsearch:elasticsearch:7.9.0'

  testCompile 'org.elasticsearch.test:framework:7.9.0'
}

// Set to false to not use elasticsearch checkstyle rules
checkstyleMain.enabled = true
checkstyleTest.enabled = true

// these are all features used within the Elasticsearch codebase
// but requires some more work to make it work in plugins
// so they are disabled to get up and running faster
dependencyLicenses.enabled = false
thirdPartyAudit.enabled = false
licenseHeaders.enabled = false

// disable validation of pom creation, only needed for sonatype uploads
validateNebulaPom.enabled = false

// ignore javadoc linting errors for now
tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

githubRelease {
    token getProperty('github.token') // This is your personal access token with Repo permissions
                         // You get this from your user settings > developer settings > Personal Access Tokens
    owner "betagouv" // default is the last part of your group. Eg group: "com.github.breadmoirai" => owner: "breadmoirai"
    repo "elasticsearch-gravitee-ingest-processor" // by default this is set to your project name
    tagName "v0.0.1" // by default this is set to "v${project.version}"
    targetCommitish "master" // by default this is set to "master"
    releaseName "v0.0.1" // Release title, by default this is the same as the tagName
    body "" // by default this is empty
    draft false // by default this is false
    prerelease false // by default this is false
    releaseAssets "$buildDir/distributions" // this points to which files you want to upload as assets with your release

    overwrite false // by default false; if set to true, will delete an existing release with the same tag and name
    dryRun false // by default false; you can use this to see what actions would be taken without making a release
    apiEndpoint "https://api.github.com" // should only change for github enterprise users
    client // This is the okhttp client used for http requests
}